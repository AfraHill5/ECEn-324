                      | #
                      | # Kyle Weller
                      | # clkrbj 62-924-1035
                      | # 
                      | # copy and checksum src and dest.
                      | # return checksum
                      | # manually control frame pointers
                      | #
                      | # Initial code
  0x000:              | .pos 0 
  0x000: 308400020000 | init:	irmovl Stack, %esp 
  0x006: 308500020000 | 	    irmovl Stack, %ebp 
  0x00c: 702c000000   | 	    jmp main 
                      |  
  0x014:              |     	.align 4 
                      | # Source block 
  0x014:              | src: 
  0x014: 0a000000     | 	    .long 0x00a 
  0x018: b0000000     | 	    .long 0x0b0 
  0x01c: 000c0000     | 	    .long 0xc00 
                      | # Destination block 
  0x020:              | dest: 
  0x020: 11010000     | 	    .long 0x111 
  0x024: 22020000     | 	    .long 0x222 
  0x028: 33030000     | 	    .long 0x333 
                      |  
  0x02c: 308003000000 | main:	irmovl $3,%eax 
  0x032: a008         | 	    pushl %eax 
  0x034: 308220000000 | 	    irmovl dest,%edx 
  0x03a: a028         | 	    pushl %edx 
  0x03c: 308114000000 |     	irmovl src,%ecx 
  0x042: a018         |     	pushl %ecx 
  0x044: 804a000000   |     	call copy 
  0x049: 10           |     	halt 
                      |  
  0x04a: a058         | copy:	pushl %ebp 
  0x04c: 2045         |     	rrmovl %esp,%ebp 
  0x04e: 501508000000 |     	mrmovl 8(%ebp),%ecx	  #ecx = src 
  0x054: 50350c000000 |     	mrmovl 12(%ebp),%ebx	#ebx = dest 
  0x05a: 502510000000 |     	mrmovl 16(%ebp),%edx	#edx = len 
  0x060: 308000000000 |     	irmovl $0,%eax		    #result = 0 
  0x066: 6222         |     	andl %edx,%edx 
  0x068: 7392000000   |     	je End 
  0x06d: 506100000000 | loop:	mrmovl (%ecx),%esi	  #get *src 
  0x073: 406300000000 | 	    rmmovl %esi,(%ebx)	  #scr = dest 
  0x079: 6360         |     	xorl %esi,%eax		    #result ^= src 
  0x07b: 308704000000 |     	irmovl $4,%edi		    #set %edi to 4 
  0x081: 6071         |     	addl %edi,%ecx		    #+4 
  0x083: 6073         |     	addl %edi,%ebx		    #+4 
  0x085: 3087ffffffff |     	irmovl $-1,%edi	      #set %edi to -1  
  0x08b: 6072         |     	addl %edi,%edx        # len - 1 
  0x08d: 746d000000   |     	jne    loop           # Stop when 0 
                      |  
                      |  
  0x092: b058         | End:	popl %ebp 
  0x094: 90           | 	    ret 
  0x200:              | .pos 0x200 
  0x200:              | Stack: 
                      | #Make sure to have newline after last line of code
                      | 
