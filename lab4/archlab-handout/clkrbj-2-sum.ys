#
# Kyle Weller
# clkrbj 62-924-1035
# 
# sum elements of a linked list
# return sum in eax
# manually control frame pointers
#
# Initial code
.pos 0
irmovl Stack,%esp
rrmovl %esp,%ebp
irmovl ele1,%edx
pushl %edx
call sum_list
halt
# Sample linked list
.align 4
ele1:
.long 0x00a
.long ele2
ele2:
.long 0x0b0
.long ele3
ele3:
.long 0xc00
.long 0
sum_list:
pushl %ebp		          # Save %ebp 
	xorl %eax,%eax		    # val = 0 
	rrmovl %esp,%ebp	    # Set frame ptr 
	mrmovl 8(%ebp),%edx	  # Get ls 
	andl %edx,%edx		    # ls == 0? 
	je L4			            # Yes, goto done 
L5:			                # Loop: 
	mrmovl (%edx),%esi	  # t = ls->val 
	addl %esi,%eax		    # val += t 
	mrmovl 4(%edx),%edx	  # ls = ls->next 
	andl %edx,%edx		    # ls == 0? 
	jne L5			          # No, goto done 
L4:			                # Done: 
	rrmovl %ebp,%esp	    # Restore %esp 
	popl %ebp		          # Restore %ebp 
	ret
.pos 0x200
Stack:
#Make sure to have newline after last line of code

